{"version":3,"sources":["types/types.js","firebase/firebaseConfig.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/note.js","actions/auth.js","components/journal/JournalEntrie.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelecter.js","hooks/useForm.js","components/notes/NoteAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/notesReducers.js","reducers/uiReducer.js","store/store.js","JournalApp.js","index.js"],"names":["types","firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","err","type","payload","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","note","forEach","snapChild","push","id","data","activeNote","addNewNote","startLoadingNotes","dispatch","notes","setNotes","startSaveNote","getState","url","noteToFireStore","doc","update","refreshNote","Swal","fire","title","message","deleNote","starLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","logout","JournalEntry","date","noteDate","moment","useDispatch","className","onClick","style","backgroundSize","backgroundImage","format","JournalEntries","useSelector","state","map","Sidebar","name","signOut","dispacht","newNote","Date","getTime","add","docRef","NothingSelecter","useForm","initialState","useState","formValues","setValues","reset","newState","handleInputChange","target","value","NoteAppBar","active","display","onChange","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","starRegisterWithEmailPassword","AuthRouter","exact","path","component","PrivateRoute","isAuth","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","setIsAuth","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9d4b7490.chunk.js","sourcesContent":["export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load note',\r\n    notesUpdate: '[Notes] Upadated note',\r\n    notesFileUrl: '[Notes] Upadated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    noteLogoutCleaning: '[Notes] Logout Cleaning',\r\n    \r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    projectId:  process.env.REACT_APP_PROJECTID,\r\n    storageBucket:  process.env.REACT_APP_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAINGSENDERID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db, \r\n    googleAuthProvider,\r\n    firebase,\r\n};","import { types } from \"../types/types\";\r\n\r\nexport const setError = ( err ) => ({           \r\n    type: types.uiSetError,\r\n    payload: err,            \r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading,\r\n    payload: true,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading,\r\n    payload: false,\r\n});","export const fileUpload = async (file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dgz3ryrhw/image/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n           method: 'POST',\r\n           body: formData,\r\n         });\r\n        if(resp.ok) {\r\n           const cloudResp = await resp.json();\r\n           return cloudResp.secure_url;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (err) {\r\n    }\r\n}","import { db } from \"../firebase/firebaseConfig\"\r\n\r\nexport const loadNotes = async (uid) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const note = [];\r\n    notesSnap.forEach( snapChild => {\r\n        note.push({\r\n            id: snapChild.id,\r\n            ...snapChild.data(),\r\n        });\r\n    });\r\n    return note;\r\n}","import Swal from 'sweetalert2';\r\nimport { db } from \"../firebase/firebaseConfig\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport  { types }  from '../types/types';\r\n\r\n// react-journal\r\nexport const startNewNote = () => {\r\n    return async ( dispacht, getState ) => {\r\n        const { auth: { uid }  } = getState();\r\n        const newNote =  {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime(),\r\n        };\r\n        const docRef = await db.collection(`${ uid }/journal/notes`).add( newNote );\r\n        dispacht( activeNote(docRef.id, newNote) );\r\n        dispacht( addNewNote(docRef.id, newNote) );\r\n    };\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload:{\r\n        id,\r\n        ...note,\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note,\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = (uid ) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch( setNotes(notes) );\r\n    };\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes,\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async ( dispatch, getState ) => {\r\n        try {\r\n            const { auth: { uid }  } = getState();\r\n            if(!note.url){\r\n                delete note.url;\r\n            }\r\n            const noteToFireStore = { ...note };\r\n            delete noteToFireStore.id;\r\n            await db.doc(`${ uid }/journal/notes/${note.id}`).update(noteToFireStore);\r\n            dispatch( refreshNote(note.id, noteToFireStore) );\r\n            Swal.fire('Saved', note.title, 'success');\r\n        } catch (e) {\r\n            Swal.fire('Error', e.message, 'error');\r\n        }\r\n    };\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id, \r\n            ...note,\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async(dispatch, getState) => {\r\n        const { active:activeNote } = getState().notes;\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        });\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        dispatch( startSaveNote(activeNote) );\r\n        Swal.close();\r\n    };\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async(dispatch, getState) => {\r\n        try{\r\n            const { uid } = getState().auth;\r\n            await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n            dispatch( deleNote(id) );\r\n            Swal.fire('Delete', 'Note deleted' , 'success');\r\n        } catch (err) {\r\n            Swal.fire('Error', err.message, 'error');\r\n        }\r\n    };\r\n}\r\n\r\nexport const deleNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id,\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.noteLogoutCleaning,\r\n});","import Swal from 'sweetalert2';\r\nimport { types } from '../types/types';\r\nimport { firebase, googleAuthProvider } from '../firebase/firebaseConfig';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { noteLogout } from './note';\r\n\r\nexport const starLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch( startLoading() );\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({ user }) => {\r\n                dispatch( login(user.uid, user.displayName) );\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch( e => {\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    };\r\n}\r\n\r\nexport const starRegisterWithEmailPassword = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async({ user }) => {\r\n                await user.updateProfile({ displayName: name });\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                );\r\n            })\r\n            .catch( e => {\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    };\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch( \r\n                    login(user.uid, user.displayName)\r\n                );\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid, \r\n        displayName,\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    };\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout,\r\n});\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/note';\r\n\r\nexport const JournalEntry = ( { id, date, title, body,  url } ) => {\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n    const handleEntryClick = () => {\r\n        const note = {\r\n            date,\r\n            title, \r\n            body,  \r\n            url,\r\n        };\r\n        dispatch( activeNote(id, note) );\r\n    }\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer  animate__animated animate__fadeInDown animate__faster\"\r\n            onClick={ handleEntryClick }\r\n        >\r\n            {url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                ></div>\r\n            }    \r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                   {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                   {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntrie';\r\n\r\nexport const JournalEntries = () => {\r\n   const { notes } = useSelector(state => state.notes);\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/note';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n    return (\r\n        <aside className=\"journal__sidebar animate__animated animate__backInLeft\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name }</span>\r\n                </h3>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\" ></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport const NothingSelecter = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something!\r\n                <br />\r\n                <i className=\"far fa-star fa-4x mt-5\"></i>\r\n            </p>\r\n        </div>\r\n    ); \r\n}\r\n","import { useState } from 'react';\r\n\r\nexport default function useForm( initialState = {} ) {\r\n    const [formValues, setValues] = useState(initialState);\r\n    \r\n    const reset = (newState = initialState) => {\r\n        setValues(newState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...formValues,\r\n            [target.name]: target.value,\r\n        });\r\n    }\r\n    return [ formValues, handleInputChange, reset ];\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/note';\r\n\r\nexport const NoteAppBar = () => {\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes);\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote(active) );\r\n    }\r\n    const handleUploadPicture = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file) {\r\n            dispatch( startUploading(file) );\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 agosto 2021</span>\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={ {display: 'none'} }\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleUploadPicture }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/note';\r\nimport useForm from '../../hooks/useForm';\r\nimport { NoteAppBar } from './NoteAppBar';\r\n\r\nexport const NoteScreen = () => {\r\n    const { active:note } = useSelector(state => state.notes);\r\n    const [formValues, handleInputChange, reset ] = useForm( note );\r\n    const {body, title, id} = formValues;\r\n    const activeId = useRef(note.id);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(note.id !== activeId.current){\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch( activeNote(formValues.id, {...formValues}) );\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting(id) );\r\n    }\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NoteAppBar />\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes_title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <textarea \r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {note.url &&\r\n                    <div className=\"notes__images\">\r\n                        <img \r\n                            src={ note.url }\r\n                            alt=\"Treeimg\"\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Sidebar } from './Sidebar';\r\nimport { NothingSelecter } from './NothingSelecter';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\n\r\nexport const JournalScreen = () => {\r\n    const { active } = useSelector(state => state.notes); \r\n    return (\r\n        <div className=\"journal__main-conter\"> \r\n            <Sidebar />\r\n  \r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelecter />)\r\n                }        \r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { starLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\r\nimport useForm from '../../hooks/useForm';\r\n\r\n\r\nexport default function LoginScreen() {\r\n    const { loading } = useSelector(state => state.ui );\r\n    \r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'nestor@gmail.com',\r\n        password: '123456',\r\n    });\r\n    const { email, password } = formValues;\r\n    \r\n    const dispatch = useDispatch();  \r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( starLoginEmailPassword(email, password) );\r\n    };\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n                onSubmit={ handleLogin } \r\n            >\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange } \r\n                    \r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange } \r\n                />\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link className=\"link\" to=\"/auth/register\">\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport useForm from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { starRegisterWithEmailPassword } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'Nestor',\r\n        email: 'nestor@gmail.com',\r\n        password: '123456',\r\n        password2: '123456',\r\n    });\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if(isFormValid()) {\r\n            dispatch( starRegisterWithEmailPassword(email, password, name) );\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        let error;\r\n        if(name.trim().length === 0){\r\n            error = 'Names is required';\r\n            dispatch( setError(error) );\r\n            return false;\r\n        } else if(!validator.isEmail(email)) {\r\n            error = 'Email is not valid';\r\n            dispatch( setError(error) );\r\n            return false;\r\n        } else if(password !== password2){\r\n            error = 'Passwords should be equals';\r\n            dispatch( setError(error) );\r\n            return false;\r\n        } else if(password.length < 5) {\r\n            error = 'The password should be at least six charecters';\r\n            dispatch( setError(error) );\r\n            return false;\r\n        }\r\n        dispatch( removeError() );\r\n        return true;\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n                onSubmit={ handleRegister } \r\n            >\r\n                {msgError &&\r\n                    <div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>\r\n                }\r\n            \r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange } \r\n                />\r\n                 <input\r\n                    className=\"auth__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange } \r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange } \r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm\"\r\n                    name=\"password2\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange } \r\n                />\r\n                \r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\"\r\n                    disabled={false}\r\n                >\r\n                    Register\r\n                </button>\r\n                <Link \r\n                    className=\"link mt-5\" \r\n                    to=\"/auth/login\">\r\n                    Already register?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport LoginScreen from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">     \r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={ LoginScreen } />\r\n                    <Route path=\"/auth/register\" component={ RegisterScreen } />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuth, \r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (  \r\n        <Route \r\n            { ...rest }\r\n            component={ (props) => (\r\n                (isAuth)\r\n                ? <Component { ...props } /> \r\n                : <Redirect to=\"/auth/login\" />\r\n            )} \r\n        />      \r\n    );\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuth, \r\n    component: Component, \r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ (props) =>(\r\n                (!isAuth)\r\n                ?<Component {...props} />\r\n                : <Redirect to=\"/\" />\r\n            )}\r\n        \r\n        />\r\n    );\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { firebase } from '../firebase/firebaseConfig';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { startLoadingNotes } from '../actions/note';\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const [checking, setChecking] = useState(true);\r\n    const [isAuth, setIsAuth] = useState(false);\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async (user) =>{\r\n            if(user?.uid) {\r\n                dispatch( login(user.uid, user.displayName) );\r\n                setIsAuth(true);\r\n                dispatch( startLoadingNotes(user.uid) );\r\n            } else {\r\n                setIsAuth(false);\r\n            }\r\n            setChecking(false);\r\n        });\r\n    }, [dispatch, setChecking, setIsAuth]);\r\n\r\n    if(checking) {\r\n        return (\r\n            <h1>Loading...</h1>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PrivateRoute exact path=\"/\" isAuth={ isAuth } component={ JournalScreen } />\r\n                    <PublicRoute path=\"/auth\" isAuth={ isAuth } component={ AuthRouter } />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    uid: '',\r\n    name: '',\r\n}\r\nexport const authReducer = ( state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n            };\r\n        case types.logout:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n/*\r\n    {\r\n        notes: [],\r\n        acitve: null,\r\n        active: {\r\n            id: 'asdf121',\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 123443434\r\n        }\r\n    }\r\n*/\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n};\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                } \r\n            };\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload,  ...state.notes],\r\n            };\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload],\r\n            }\r\n        case types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.note.id\r\n                    ? action.payload.note\r\n                    : note\r\n                )\r\n            };\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(\r\n                    note => note.id !== action.payload\r\n                )\r\n            };\r\n        case types.noteLogoutCleaning:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n               ...state,\r\n               msgError: action.payload,  \r\n            };\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null,\r\n            };\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: action.payload,\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducers';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    ),\r\n);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport default function JournalApp() {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport JournalApp from './JournalApp';\r\nimport './styles/styles.scss';\r\n\r\nReactDOM.render(\r\n    <JournalApp />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}